

|---------------------------------------------------------------------------------------|
| class MainScene : public Scene                                                        |
|---------------------------------------------------------------------------------------|
| + void event(const SDL_Event &ev)                                                     |
| + void update(float delta)                                                            |
| + void render()                                                                       |
|                                                                                       |
| + MainScene()                                                                         |
| + ~MainScene()                                                                        |
|                                                                                       |
| + Camera *_camera                                                                     |
| + Image *_image                                                                       |
| + Texture *_texture                                                                   |
| + Sprite *_sprite                                                                     |
| + int _dir                                                                            |
|---------------------------------------------------------------------------------------|



void event(const SDL_Event &ev):
	return

void update(float delta):
	return

void render():
	Renderer::get_singleton()->clear()

	_camera->viewport.x += _dir

	if (_camera->viewport.x <= -100)
		_dir = 1
	else if (_camera->viewport.x >= 100)
		_dir = -1

	_camera->bind()

	_sprite->draw()


MainScene():
	_camera =  new Camera()
	_image = new Image("ti.bmp")
	_texture = new Texture(_image)
	_sprite = new Sprite(_texture)

	_sprite->set_x(30)
	_sprite->set_y(30)

	_dir = 1


~MainScene():
	_texture->free()
	_image->free()

	delete _sprite
	delete _texture
	delete _image
	delete _camera







#ifndef IMPL_APPLICATION_H
#define IMPL_APPLICATION_H

#include "application.h"

#include "main_scene.h"

class ImplApplication : public Application:
public:
    ImplApplication() : Application():
        scene = new MainScene()
    
    ~ImplApplication():
        delete scene
    


#endif